{"version":3,"sources":["logo.svg","components/Navbar.js","components/From.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","onClick","toggleMode","role","htmlFor","From","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAler","document","title","toLowerCase","console","log","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","msg","defaultProps","AboutText","App","setMode","setAlert","showAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9d813428.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Textutils\r\n        </a>\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          Textutils\r\n        </Link> */}\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.AboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Modes</label>\r\n</div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  AboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  AboutText: \"About\",\r\n};\r\n","import React, {useState} from \"react\";\r\n\r\n\r\n\r\nexport default function From(props) {\r\n    const handleupClick = ()=>{\r\n        // console.log(\"uppercase was clicked\" + text);\r\n        let newText  = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAler(\"Converted to Uppercase!\", \"Success\" );\r\n        document.title = \"textutils - Uppercase\";\r\n    }\r\n    const handleloClick = ()=>{\r\n        // console.log(\"Lowercase was clicked\" + text);\r\n        let newText  = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAler(\"Converted to lowercase!\", \"Success\" );\r\n    }\r\n    const handleClearClick = ()=>{\r\n        // console.log(\"uppercase was clicked\" + text);\r\n        let newText  = '';\r\n        setText(newText);\r\n        props.showAler(\"Text Cleard!\", \"Success\" );\r\n    }\r\n        const handleonchanged = (event)=>{\r\n            // console.log(\"on change\");\r\n            setText(event.target.value);\r\n        \r\n    }\r\n\r\n    const handleCopy = () => {\r\n      console.log(\"I am copy\");\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      \r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAler(\"Copied to Clipboard!\", \"Success\" );\r\n    }\r\n    const handleExtraSpaces = () => {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAler(\"Extra Spacess Removed!\", \"Success\" );\r\n    }\r\n    \r\n    const [text, setText] = useState('');\r\n  return (\r\n      <>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n   \r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleonchanged} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleupClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleloClick}>Convert to Lowercase</button>\r\n      <button className=\"btn btn-primary mx-2 my-3\" onClick={handleClearClick}>Clear text</button>\r\n      <button className=\"btn btn-primary mx-2 my-3\" onClick={handleCopy}>Copy text</button>\r\n      <button className=\"btn btn-primary mx-2 my-3\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} minute read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Sumthing in The TextBox above to preview it here\"}</p>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\"\r\n    >\r\n      <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-close\"\r\n        data-bs-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n      ></button>\r\n    </div>\r\n  );\r\n}\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport From from \"./components/From\";\n// import About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Outlet\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"textutils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"textutils - light Mode\";\n    }\n  };\n  return (\n\n\n    \n    <>\n      {/* // // <BrowserRouter> */}\n         {/* <Navbar title=\"Textutils\" AboutText=\"About Text Tutorials\"/> */}\n       <Navbar mode={mode} toggleMode={toggleMode} />\n       <Alert alert={alert} />\n       {/* <About/> */}\n        <div className=\"container my-3\">\n      {/* //   <Routes> */}\n      {/* //   <Route exact path=\"/about\" element={<About />} /> */}\n           \n             <From\n                showAler={showAlert}\n                heading=\"Enter the text to Analyze Below\"\n                mode={mode}\n              />\n             \n           \n      {/* //       </Routes> */}\n      //   </div>\n      {/* // </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}